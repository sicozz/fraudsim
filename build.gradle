plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
    id 'com.diffplug.spotless' version '6.23.0'
}

group = 'io.github.sicozz'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()

    /* TODO: Use the schema registry for serialization
    maven { url 'https://packages.confluent.io/maven/' }
     */
}

ext {
    set('springCloudVersion', "2023.0.0")
    set('testcontainersVersion', "1.19.1")
}

dependencies {
    // Spring Boot Core
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'

    /* TODO: Use the schema registry for serialization
    // Add Confluent Kafka Schema Registry client
    implementation 'io.confluent:kafka-avro-serializer:7.5.1'
    implementation 'io.confluent:kafka-schema-registry-client:7.5.1'
     */

    // CLI
    implementation 'info.picocli:picocli-spring-boot-starter:4.7.5'
    implementation 'org.jline:jline:3.24.0'

    // Serialization
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.apache.avro:avro:1.11.3'

    // Statistical computation
    implementation 'org.apache.commons:commons-math3:3.6.1'

    // Fake data generation
    implementation 'net.datafaker:datafaker:1.9.0'

    // Rule engine
    implementation 'org.drools:drools-core:8.44.0.Final'
    implementation 'org.drools:drools-compiler:8.44.0.Final'

    // Utils
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'com.google.guava:guava:32.1.3-jre'

    // Development tools
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:kafka'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Fix for snakeyaml issue
    implementation 'org.yaml:snakeyaml:2.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

    // Enable virtual threads for testing
    jvmArgs('--enable-preview')
}

tasks.named('compileJava') {
    options.compilerArgs += ['--enable-preview']
}

tasks.named('compileTestJava') {
    options.compilerArgs += ['--enable-preview']
}

tasks.named('bootRun') {
    jvmArgs('--enable-preview')
}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat()
        formatAnnotations()
    }
}